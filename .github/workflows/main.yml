name: CI
on:
  #push:
   # branches: [ master ]
    #paths:
     #       - 'force-app/**'
  pull_request:
    branches: [ master ]
    paths:
            - 'force-app/**'         

jobs: 
  format-lint:
    runs-on: ubuntu-latest

    steps:
    # Checkout the source code
    - name: 'Checkout source code'
      uses: actions/checkout@v2 

    # Cache node_modules to speed up the process
    - name: Restore node_modules cache
      id: cache-npm
      uses: actions/cache@v1
      with:
          path: node_modules
          key: npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
             npm-${{ env.cache-name }}-
             npm-
    
    # Install npm dependencies for Prettier and Jest
    - name: 'Install npm dependencies'
      if: steps.cache-npm.outputs.cache-hit != 'true'
      run: npm ci

    # Prettier formatting
    - name: 'Code formatting verification with Prettier'
      run: npm run prettier:verify
  
    # Lint LWC
    - name: 'Lint Lightning Web Components'
      run: npm run lint:lwc   
  
  security-check-deploy-scratch-org:
    runs-on: ubuntu-latest
    needs: format-lint

    steps:
    - uses: actions/checkout@v2
      with:
        ref: ${{ github.ref }}
        fetch-depth: 0
      if: github.event.action == 'opened' || github.event.action == 'synchronize' || github.event_name == 'push'
    - uses: actions/setup-node@v1
      with:
        node-version: '14'
   
    - name: Install Salesforce CLI
      run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version
      
    
    # Install Salesforce CLI Scanner
    - name: 'Install Salesforce CLI Scanner'
      run: sfdx plugins:install @salesforce/sfdx-scanner

    # Run Salesforce CLI Scanner For Security checks
    - name: 'Scan For Security Exceptions'
      run: sfdx scanner:run --pmdconfig ruleset.xml --target ./force-app --engine pmd -v 	
    
    - name: 'Populate auth file with SFDX_URL secret'
      shell: bash
      run: 'echo ${{ secrets.SFDX_DEV}} > SFDX_QA'

    - name: 'Authenticate against dev hub'
      run: sfdx force:auth:sfdxurl:store -f SFDX_QA -s -a DevHub

    # Create scratch org
    - name: 'Create scratch org'
      run: sfdx force:org:create -f config/project-scratch-def.json -a CICDScratchOrg -s -d 1 -v DevHub
    
    # Deploy source to scratch org
    - name: 'Push source to scratch org'
      run: sfdx force:source:push
    
    - name: Run Apex test
      run: sfdx force:apex:test:run --resultformat json --codecoverage --testlevel=RunLocalTests -r json	
    
    - name: 'Delete scratch org'
      if: always()
      run: sfdx force:org:delete -p -u CICDScratchOrg

  deploy-dev-org:
    runs-on: ubuntu-latest
    needs: security-check-deploy-scratch-org
    
    steps:
    - name: Install Salesforce CLI
      run: |
          wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
          mkdir ~/sfdx
          tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
          echo "$HOME/sfdx/bin" >> $GITHUB_PATH
          ~/sfdx/bin/sfdx version
    
    # Install Salesforce CLI Scanner
    - name: 'Install Salesforce CLI Scanner'
      run: sfdx plugins:install @salesforce/sfdx-scanner
      
    # Checkout the source code
    - name: 'Checkout source code'
      uses: actions/checkout@v2
      
    # Run Salesforce CLI Scanner For Security checks
    - name: 'Scan For Security Exceptions'
      run: sfdx scanner:run --pmdconfig ruleset.xml --target ./force-app --engine pmd -v  

    - name: 'Populate auth file with SFDX_URL secret'
      shell: bash
      run: 'echo ${{ secrets.SFDX_DEV}} > SFDX_PA'

    - name: 'Authenticate against dev hub'
      run: sfdx force:auth:sfdxurl:store -f SFDX_PA -s -a DevHub

    - name: Run Apex test
      run: sfdx force:apex:test:run --resultformat json --codecoverage --testlevel=RunLocalTests -r human
      
    - name: Deploy source
      id: Deploy      
      run: sfdx force:source:deploy -p force-app -u DevHub --json --loglevel fatal
